service: public-badges-registry-flow
variablesResolutionMode: 20210326
plugins:
  - serverless-plugin-monorepo

custom:
  parameter_prefix: public-badges/${opt:stage}
  event_bus: ${ssm:/${self:custom.parameter_prefix}/shared/event_bus}
  approver_email: ${ssm:/${self:custom.parameter_prefix}/registry/approver_email}
  role: ${ssm:/${self:custom.parameter_prefix}/registry/role}
  registry_bucket: ${ssm:/${self:custom.parameter_prefix}/registry/bucket}
  registry_lookup: ${ssm:/${self:custom.parameter_prefix}/registry/lookup_table}
  approval_requested_template: ${ssm:/${self:custom.parameter_prefix}/registry/templates/approval_requested}
  pending_registration_template: ${ssm:/${self:custom.parameter_prefix}/registry/templates/pending_registration}
  approved_registration_template: ${ssm:/${self:custom.parameter_prefix}/registry/templates/approved_registration}
  function_prefix: public-badges-${opt:stage}
  api: ${self:custom.function_prefix}-graphql
  send_notifications: ${self:custom.function_prefix}.send-notifications
  save_organization: ${self:custom.function_prefix}.save-organization
  update_registry_lookup: ${self:custom.function_prefix}-update-registry-lookup

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  eventBridge:
    useCloudFormation: true
  lambdaHashingVersion: 20201221
  iam:
    role: ${self:custom.role}

functions:
  saveOrganization:
    handler: dist/index.saveOrganization
    events:
      - eventBridge:
          eventBus: ${self:custom.event_bus}
          pattern:
            source:
              - ${self:custom.api}
            detail-type:
              - ORGANIZATION_REGISTRATION_REQUESTED
              - ORGANIZATION_APPROVAL_ACCEPTED
    environment:
      REGISTRY_BUCKET: ${self:custom.registry_bucket}
      EVENT_BUS_NAME: ${self:custom.event_bus}
      HANDLER_NAME: ${self:custom.save_organization}
  sendNotifications:
    handler: dist/index.sendNotifications
    events:
      - eventBridge:
          eventBus: ${self:custom.event_bus}
          pattern:
            source:
              - ${self:custom.save_organization}
            detail-type:
              - ORGANIZATION_APPROVAL_REQUESTED
              - ORGANIZATION_APPROVED
    environment:
      APPROVER_EMAIL: ${self:custom.approver_email}
      HANDLER_NAME: ${self:custom.send_notifications}
      EVENT_BUS_NAME: ${self:custom.event_bus}
      APPROVAL_REQUESTED_TEMPLATE: ${self:custom.approval_requested_template}
      PENDING_REGISTRATION_TEMPLATE: ${self:custom.pending_registration_template}
      APPROVED_REGISTRATION_TEMPLATE: ${self:custom.approved_registration_template}
  updateRegistry:
    handler: dist/index.updateRegistry
    events:
      - eventBridge:
          eventBus: ${self:custom.event_bus}
          pattern:
            source:
              - ${self:custom.api}
            detail-type:
              - ORGANIZATION_REGISTRATION_REQUESTED
              - ORGANIZATION_APPROVAL_ACCEPTED
    environment:
      REGISTRY_LOOKUP_TABLE: ${self:custom.registry_lookup}
      EVENT_BUS_NAME: ${self:custom.event_bus}
      HANDLER_NAME: ${self:custom.update_registry_lookup}
